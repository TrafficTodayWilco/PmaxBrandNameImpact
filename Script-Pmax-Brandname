// Copyright 2023
// Free to use or alter for everyone. A mention would be nice ;-)
//
// Idea By: Mike Rhodes
// Put on steroids by: Tibbe van Asten
// Added brand name analysis by: Wilco Mulder  
//
// Last update: 27-08-2023
//
// ABOUT THE SCRIPT
// Export search term categories from Pmax campaigns to a spreadsheet + add brand name impact
//
// ! Copy this sheet: https://docs.google.com/spreadsheets/d/1YBCu-nnoaQMQydElw5P58FzHbqmUVu1STqn1IRR4Lc4/copy
// ! Fill in the spreadsheet your brand name in the brandname tab. 
// ! Place your sheet URL in line 22
// 
var config = {
    LOG: false,
    // Change the number of days of which data must be exported. Only change the number!
    DATE_RANGE: last_n_days(30),
    // Edit the URL of your Google Sheet in here, with '/edit' at the end
    SPREADSHEET_URL: "YOUR-URL"
}

//////////////////////////////////////////////////////////////////

function main() {
    var spreadsheet = SpreadsheetApp.openByUrl(config.SPREADSHEET_URL);

    // Check if "Summary" tab is available otherwise create it
    var calculateSheet = checkTab(spreadsheet, "Summary");

    let campaignIterator = AdsApp
        .performanceMaxCampaigns()
        .withCondition("campaign.status = ENABLED")
        .get();

    while (campaignIterator.hasNext()) {
        let campaign = campaignIterator.next();

        let query = AdsApp.report(
            "SELECT campaign_search_term_insight.category_label, metrics.clicks, metrics.impressions, metrics.conversions, metrics.conversions_value " +
            "FROM campaign_search_term_insight " +
            "WHERE segments.date DURING LAST_30_DAYS " +
            "AND campaign_search_term_insight.campaign_id = '" + campaign.getId() + "' " +
            "AND segments.date BETWEEN '" + config.DATE_RANGE.split(',')[0] + "' AND '" + config.DATE_RANGE.split(',')[1] + "' " +
            "ORDER BY metrics.impressions DESC"
        );

        if (config.LOG === true) {
            Logger.log("Report " + campaign.getName() + " contains " + query.rows().totalNumEntities() + " rows.");
        }

        let sheet = checkTab(spreadsheet, campaign.getName());
        query.exportToSheet(sheet);
    } // campaignIterator    

    // Now that you have collected data for all campaigns, let's populate the "Summary" tab
    calculateSheet.getRange(1, 1).setValue("Campaign name");
    calculateSheet.getRange(1, 2).setValue("Brand_clicks");
    calculateSheet.getRange(1, 3).setValue("Brand_impressions");
    calculateSheet.getRange(1, 4).setValue("Brand_conversions");
    calculateSheet.getRange(1, 5).setValue("Brand_conv. value");

    calculateSheet.getRange(1, 6).setValue("Total_clicks");
    calculateSheet.getRange(1, 7).setValue("Total_impressions");
    calculateSheet.getRange(1, 8).setValue("Total_conversions");
    calculateSheet.getRange(1, 9).setValue("Total_conv. value");

    // Populate the "Summary" tab with campaign data and add Sheets formula
    var activeCampaignNames = getActiveCampaignNames();
    for (var i = 0; i < activeCampaignNames.length; i++) {
        calculateSheet.getRange(i + 2, 1).setValue(activeCampaignNames[i]);
        calculateSheet.getRange(i + 2, 2).setValue("=IFNA(VLOOKUP(Brandname!$B$1;'" + activeCampaignNames[i] + "'!A1:E8000;2;);0)");
        calculateSheet.getRange(i + 2, 3).setValue("=IFNA(VLOOKUP(Brandname!$B$1;'" + activeCampaignNames[i] + "'!A1:E8000;3;);0)");
        calculateSheet.getRange(i + 2, 4).setValue("=IFNA(VLOOKUP(Brandname!$B$1;'" + activeCampaignNames[i] + "'!A1:E8000;4;);0)");
        calculateSheet.getRange(i + 2, 5).setValue("=IFNA(VLOOKUP(Brandname!$B$1;'" + activeCampaignNames[i] + "'!A1:E8000;5;);0)");

        calculateSheet.getRange(i + 2, 6).setValue("=SUM('" + activeCampaignNames[i] + "'!B:B)");
        calculateSheet.getRange(i + 2, 7).setValue("=SUM('" + activeCampaignNames[i] + "'!C:C)");
        calculateSheet.getRange(i + 2, 8).setValue("=SUM('" + activeCampaignNames[i] + "'!D:D)");
        calculateSheet.getRange(i + 2, 9).setValue("=SUM('" + activeCampaignNames[i] + "'!E:E)");
    }
}

  ////////////////////////////////////////////////////////////////////

function getActiveCampaignNames() {
    var campaignNames = [];

    var campaignIterator = AdsApp
        .performanceMaxCampaigns()
        .withCondition("campaign.status = ENABLED")
        .get();

    while (campaignIterator.hasNext()) {
        var campaign = campaignIterator.next();
        campaignNames.push(campaign.getName());
    }

    return campaignNames;
}

  ////////////////////////////////////////////////////////////////////
  
  function checkTab(file, tabName){
    
    if(SpreadsheetApp.openById(file.getId()).getSheetByName(tabName)){
      var tab = SpreadsheetApp.openById(file.getId()).getSheetByName(tabName);
      
      if(config.LOG === true){
       Logger.log("Selected tab " + tabName);      
      }
    } else {
      var tab = SpreadsheetApp.openById(file.getId()).insertSheet(tabName);
      
        if(config.LOG === true){
         Logger.log("Created tab " + tabName);      
        }
    }
    
    // Remove default tab in Dutch
    if(SpreadsheetApp.openById(file.getId()).getSheetByName("Blad1")){
      var defaultSheet = SpreadsheetApp.openById(file.getId()).getSheetByName("Blad1")
      SpreadsheetApp.openById(file.getId()).deleteSheet(defaultSheet);
    }
    
    // Remove default tab in English
    if(SpreadsheetApp.openById(file.getId()).getSheetByName("Sheet1")){
      var defaultSheet = SpreadsheetApp.openById(file.getId()).getSheetByName("Sheet1")
      SpreadsheetApp.openById(file.getId()).deleteSheet(defaultSheet);
    }
    
    return tab;
    
  } // function checkTab
  
  ////////////////////////////////////////////////////////////////////
  
  function last_n_days(n) {
  
      var	from = new Date(), to = new Date();
      to.setUTCDate(from.getUTCDate() - n);
    from.setUTCDate(from.getUTCDate() - 1);
  
      return google_date_range(from, to);
  
  } // function last_n_days()
  
  ////////////////////////////////////////////////////////////////////
  
  function google_date_range(from, to) {
  
      function google_format(date) {
          var date_array = [date.getUTCFullYear(), date.getUTCMonth() + 1, date.getUTCDate()];
          if (date_array[1] < 10) date_array[1] = '0' + date_array[1];
          if (date_array[2] < 10) date_array[2] = '0' + date_array[2];
  
          return date_array.join('');
      }
  
      var inverse = (from > to);
      from = google_format(from);
      to = google_format(to);
      var result = [from, to];
  
      if (inverse) {
          result = [to, from];
      }
  
      return result.join(',');
  
  } // function google_date_range()
